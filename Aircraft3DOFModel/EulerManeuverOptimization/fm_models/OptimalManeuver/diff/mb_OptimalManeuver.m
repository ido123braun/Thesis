function [ statesdot, outputs, j_statesdot, j_outputs ] = mb_OptimalManeuver(states, controls)
%mb_OptimalManeuver
% File automatically generated by FALCON.m

%=== Extract Data From Input ==============================================
x_E = states(1);
y_E = states(2);
z_E = states(3);
v = states(4);
phi = states(5);
gamma = states(6);
psi = states(7);
W = states(8);
P = states(9);
Js = states(10);
n = states(11);
Pcom = controls(1);
Jscom = controls(2);
ncom = controls(3);

%=== Jacobians and Hessians ===============================================
j_states = zeros(11, 14);
j_states(:, 1 : 11) = eye(11);
j_x_E = j_states(1, :);
j_y_E = j_states(2, :);
j_z_E = j_states(3, :);
j_v = j_states(4, :);
j_phi = j_states(5, :);
j_gamma = j_states(6, :);
j_psi = j_states(7, :);
j_W = j_states(8, :);
j_P = j_states(9, :);
j_Js = j_states(10, :);
j_n = j_states(11, :);
j_controls = zeros(3, 14);
j_controls(:, 12 : 14) = eye(3);
j_Pcom = j_controls(1, :);
j_Jscom = j_controls(2, :);
j_ncom = j_controls(3, :);

%=== Write Constants ======================================================

%=== Subsystem sysPositionPropagation =====================================

% Defined at main (main.m:45)

% Call sys_6660ca7b3a59f873d788ad4c209e1c7d_jac
[ rdot_E, j_rdot_E ] = sys_6660ca7b3a59f873d788ad4c209e1c7d_jac(v, phi, gamma, psi);

% Hessian Jacobian for sys_6660ca7b3a59f873d788ad4c209e1c7d_jac
tmp_j_input_sys_6660ca7b3a59f873d788ad4c209e1c7d_jac = [j_v; j_phi; j_gamma; j_psi];

% Calculation of Jacobian with respect to function global input for sys_6660ca7b3a59f873d788ad4c209e1c7d_jac
j_rdot_E = j_rdot_E * tmp_j_input_sys_6660ca7b3a59f873d788ad4c209e1c7d_jac;

%=== Subsystem sysAeroCalc ================================================

% Defined at main (main.m:50)

% Call sys_abd1dd15ef234fda3363cddb8e59878b_jac
[ alpha, CL, CD, j_alpha, j_CL, j_CD ] = sys_abd1dd15ef234fda3363cddb8e59878b_jac(z_E, v, n, W);

% Hessian Jacobian for sys_abd1dd15ef234fda3363cddb8e59878b_jac
tmp_j_input_sys_abd1dd15ef234fda3363cddb8e59878b_jac = [j_z_E; j_v; j_n; j_W];

% Calculation of Jacobian with respect to function global input for sys_abd1dd15ef234fda3363cddb8e59878b_jac
j_alpha = j_alpha * tmp_j_input_sys_abd1dd15ef234fda3363cddb8e59878b_jac;
j_CL = j_CL * tmp_j_input_sys_abd1dd15ef234fda3363cddb8e59878b_jac;
j_CD = j_CD * tmp_j_input_sys_abd1dd15ef234fda3363cddb8e59878b_jac;

%=== Subsystem sysThrustCalc ==============================================

% Defined at main (main.m:55)

% Call sys_674cfd48df4a3213d3be218b57f43a70_jac
[ T, TSFC, j_T, j_TSFC ] = sys_674cfd48df4a3213d3be218b57f43a70_jac(z_E, v, Js);

% Hessian Jacobian for sys_674cfd48df4a3213d3be218b57f43a70_jac
tmp_j_input_sys_674cfd48df4a3213d3be218b57f43a70_jac = [j_z_E; j_v; j_Js];

% Calculation of Jacobian with respect to function global input for sys_674cfd48df4a3213d3be218b57f43a70_jac
j_T = j_T * tmp_j_input_sys_674cfd48df4a3213d3be218b57f43a70_jac;
j_TSFC = j_TSFC * tmp_j_input_sys_674cfd48df4a3213d3be218b57f43a70_jac;

%=== Subsystem sysTranslationPropagation ==================================

% Defined at main (main.m:60)

% Call sys_95bf0ef0a541e5e15b1e97c1ab8d4011_jac
[ vdot, phidot, gammadot, psidot, Wdot, ng, Wneg, j_vdot, j_phidot, j_gammadot, j_psidot, j_Wdot, j_ng, j_Wneg ] = sys_95bf0ef0a541e5e15b1e97c1ab8d4011_jac(z_E, v, phi, gamma, W, P, T, CD, CL, alpha, TSFC);

% Hessian Jacobian for sys_95bf0ef0a541e5e15b1e97c1ab8d4011_jac
tmp_j_input_sys_95bf0ef0a541e5e15b1e97c1ab8d4011_jac = [j_z_E; j_v; j_phi; j_gamma; j_W; j_P; j_T; j_CD; j_CL; j_alpha; j_TSFC];

% Calculation of Jacobian with respect to function global input for sys_95bf0ef0a541e5e15b1e97c1ab8d4011_jac
j_vdot = j_vdot * tmp_j_input_sys_95bf0ef0a541e5e15b1e97c1ab8d4011_jac;
j_phidot = j_phidot * tmp_j_input_sys_95bf0ef0a541e5e15b1e97c1ab8d4011_jac;
j_gammadot = j_gammadot * tmp_j_input_sys_95bf0ef0a541e5e15b1e97c1ab8d4011_jac;
j_psidot = j_psidot * tmp_j_input_sys_95bf0ef0a541e5e15b1e97c1ab8d4011_jac;
j_Wdot = j_Wdot * tmp_j_input_sys_95bf0ef0a541e5e15b1e97c1ab8d4011_jac;
j_ng = j_ng * tmp_j_input_sys_95bf0ef0a541e5e15b1e97c1ab8d4011_jac;
j_Wneg = j_Wneg * tmp_j_input_sys_95bf0ef0a541e5e15b1e97c1ab8d4011_jac;

%=== Subsystem sysCommandsDelay ===========================================

% Defined at main (main.m:65)

% Call sys_2e11da000b4bbadf99d6dd9a0951f18b_jac
[ Pdot, Jsdot, ndot, j_Pdot, j_Jsdot, j_ndot ] = sys_2e11da000b4bbadf99d6dd9a0951f18b_jac(P, Js, n, Pcom, Jscom, ncom);

% Hessian Jacobian for sys_2e11da000b4bbadf99d6dd9a0951f18b_jac
tmp_j_input_sys_2e11da000b4bbadf99d6dd9a0951f18b_jac = [j_P; j_Js; j_n; j_Pcom; j_Jscom; j_ncom];

% Calculation of Jacobian with respect to function global input for sys_2e11da000b4bbadf99d6dd9a0951f18b_jac
j_Pdot = j_Pdot * tmp_j_input_sys_2e11da000b4bbadf99d6dd9a0951f18b_jac;
j_Jsdot = j_Jsdot * tmp_j_input_sys_2e11da000b4bbadf99d6dd9a0951f18b_jac;
j_ndot = j_ndot * tmp_j_input_sys_2e11da000b4bbadf99d6dd9a0951f18b_jac;

%=== Split Variable rdot_E ================================================
xdot_E = rdot_E(1.');
j_xdot_E = [j_rdot_E(1,:)];
ydot_E = rdot_E(2.');
j_ydot_E = [j_rdot_E(2,:)];
zdot_E = rdot_E(3.');
j_zdot_E = [j_rdot_E(3,:)];

% Combine Variables to statesdot
statesdot = [xdot_E; ydot_E; zdot_E; vdot; phidot; gammadot; psidot; Wdot; Pdot; Jsdot; ndot];
j_statesdot = [
    j_xdot_E(1, :)
    j_ydot_E(1, :)
    j_zdot_E(1, :)
    j_vdot(1, :)
    j_phidot(1, :)
    j_gammadot(1, :)
    j_psidot(1, :)
    j_Wdot(1, :)
    j_Pdot(1, :)
    j_Jsdot(1, :)
    j_ndot(1, :)
];

% Combine Variables to outputs
outputs = [alpha; CL; CD; T; TSFC; ng; Wneg];
j_outputs = [
    j_alpha(1, :)
    j_CL(1, :)
    j_CD(1, :)
    j_T(1, :)
    j_TSFC(1, :)
    j_ng(1, :)
    j_Wneg(1, :)
];

end
